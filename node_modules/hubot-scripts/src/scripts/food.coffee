# Description:
#   Food for the masses
#
# Dependencies:
#   "ordrin-api": "0.1.96"
#
# Configuration:
#   None
#
# Commands:
#   food me - Start ordering food
#
# Author:
#   jimtla AND ryandm

ordrinApi = require "ordrin-api"

ordrin = ordrinApi.init
  apiKey: "bs9lzpr3hEKefhah-okCW1Vbi8KGcHm5Rgce5Qfkmnc",
  servers: "test"

try
  address = new ordrin.Address "841 Broadway", "New York", "NY", 10014, 4014641931
catch e
  console.log e
  throw e

pretty_json = (object) -> JSON.stringify object, null, 4


new_state = ->
  restaurant: null
  orders: []

state = new_state()

module.exports = (robot) ->

  getIdFromFuzz = (fuzz, arrOfObjWithPropsCalledIdAndNa) ->
    filter = require 'fuzzy-filter'
    names = (o.na for o in arrOfObjWithPropsCalledIdAndNa when o.na?)
    matchedNames = filter fuzz, names
    return (o for o in arrOfObjWithPropsCalledIdAndNa when o.na in matchedNames)
    
  robot.respond /fuzz me ([^ ]*)/i, (msg) ->
    ordrin.restaurant.getDeliveryList new Date, address, (err, restaurants) ->
      if err
        msg.reply pretty_json err
      else
        msg.reply pretty_json getIdFromFuzz msg.match[1], restaurants

  robot.respond /food me/i, (msg) ->
    ordrin.restaurant.getDeliveryList new Date, address, (err, restaurants) ->
      if err
        msg.reply pretty_json err
      else
        msg.reply pretty_json restaurants

  robot.respond /order from (.+)/i, (msg) ->
    state = new_state()

    restaurant_id = msg.match[1]
    ordrin.restaurant.getDetails restaurant_id, (err, restaurant) ->
      if err
        msg.reply pretty_json err
      else
        state.restaurant = restaurant
        msg.reply pretty_json restaurant

  robot.respond /order me (.+)/i, (msg) ->
    if not state.restaurant?
      msg.reply "There is no order in progess. To start an order try `order from <restaurant_id>"
    else
      item_id = msg.match[1]

      item = do ->
        for category in state.restaurant.menu
          for item in category.children
            if item.id == item_id
              return item
        null

      if not item?
        msg.reply "No item matched."
      else
        state.orders.push
          orderer: msg.message.user.name
          item: item
        msg.reply "Okay!"

  robot.respond /order it!/i, (msg) ->
    msg.reply pretty_json state

